{"version":3,"file":"static/js/490.8aa0fc03.chunk.js","mappings":"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","sources":["pages/Login.js","../javascript/esm|C:/Users/mdele/OneDrive - Üsküdar Üniversitesi/Masaüstü/v1/danatelecom/danatelecom frontend/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../javascript/esm|C:/Users/mdele/OneDrive - Üsküdar Üniversitesi/Masaüstü/v1/danatelecom/danatelecom frontend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login, register } from '../services/api';\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const [isRegister, setIsRegister] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Add console log to verify component mounting\r\n        console.log('Login component mounted');\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setLoading(true);\r\n\r\n        try {\r\n            if (isRegister) {\r\n                // Handle Registration\r\n                if (formData.password !== formData.confirmPassword) {\r\n                    setError('كلمات المرور غير متطابقة');\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n                \r\n                // Create registration data object with only the required fields\r\n                const registrationData = {\r\n                    username: formData.username,\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    firstName: formData.firstName,\r\n                    lastName: formData.lastName\r\n                };\r\n                \r\n                console.log(\"Sending registration data:\", registrationData);\r\n                const response = await register(registrationData);\r\n                console.log(\"Registration response:\", response);\r\n                \r\n                // Store token in localStorage\r\n                if (response.token) {\r\n                    localStorage.setItem('userToken', response.token);\r\n                }\r\n                \r\n                // Redirect based on user role\r\n                if (response.user && response.user.role === 'admin') {\r\n                    navigate('/admin');\r\n                } else {\r\n                    navigate('/profile');\r\n                }\r\n            } else {\r\n                // Handle Login\r\n                const loginData = {\r\n                    username: formData.username,\r\n                    password: formData.password\r\n                };\r\n                \r\n                console.log(\"Sending login data:\", loginData);\r\n                const response = await login(loginData);\r\n                console.log(\"Login response:\", response);\r\n                \r\n                // Store token in localStorage\r\n                if (response.token) {\r\n                    localStorage.setItem('userToken', response.token);\r\n                }\r\n                \r\n                // Redirect based on user role\r\n                if (response.user && response.user.role === 'admin') {\r\n                    navigate('/admin');\r\n                } else {\r\n                    navigate('/profile');\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(isRegister ? 'Registration error:' : 'Login error:', err);\r\n            \r\n            // Extract error message from response if available\r\n            let errorMessage;\r\n            if (err.response) {\r\n                errorMessage = err.response.data?.message || \r\n                    (isRegister ? 'فشل تسجيل الحساب' : 'فشل تسجيل الدخول');\r\n                \r\n                // Handle specific error cases\r\n                if (err.response.status === 400) {\r\n                    if (err.response.data?.message === 'Username or email already exists') {\r\n                        errorMessage = 'اسم المستخدم أو البريد الإلكتروني مستخدم بالفعل';\r\n                    }\r\n                }\r\n            } else {\r\n                errorMessage = isRegister ? 'فشل تسجيل الحساب' : 'فشل تسجيل الدخول';\r\n            }\r\n            \r\n            setError(errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const toggleRegister = () => {\r\n        setIsRegister(!isRegister);\r\n        setError(''); // Clear errors when switching form type\r\n        setFormData({  // Reset form data when switching\r\n            username: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\" dir=\"rtl\">\r\n            <div className=\"max-w-md w-full space-y-8 bg-gray-800 p-8 rounded-lg shadow-lg\">\r\n                <div>\r\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-white\">\r\n                        {isRegister ? 'إنشاء حساب جديد' : 'تسجيل الدخول'}\r\n                    </h2>\r\n                </div>\r\n                <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n                    {error && (\r\n                        <div className=\"bg-red-500 text-white p-3 rounded text-center\">\r\n                            {error}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                        <div>\r\n                            <label htmlFor=\"username\" className=\"sr-only\">اسم المستخدم</label>\r\n                            <input\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 bg-gray-700 text-white placeholder-gray-400 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                                placeholder=\"اسم المستخدم\"\r\n                                value={formData.username}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        {isRegister && (\r\n                            <>\r\n                                <div>\r\n                                    <label htmlFor=\"firstName\" className=\"sr-only\">الاسم الأول</label>\r\n                                    <input\r\n                                        id=\"firstName\"\r\n                                        name=\"firstName\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                                        placeholder=\"الاسم الأول\"\r\n                                        value={formData.firstName}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlFor=\"lastName\" className=\"sr-only\">اسم العائلة</label>\r\n                                    <input\r\n                                        id=\"lastName\"\r\n                                        name=\"lastName\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                                        placeholder=\"اسم العائلة\"\r\n                                        value={formData.lastName}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        {isRegister && (\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"sr-only\">البريد الإلكتروني</label>\r\n                                <input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    required\r\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                                    placeholder=\"البريد الإلكتروني\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"sr-only\">كلمة المرور</label>\r\n                            <input\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                required\r\n                                className={`appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm ${isRegister ? '' : 'rounded-b-md'}`}\r\n                                placeholder=\"كلمة المرور\"\r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        {isRegister && (\r\n                            <div>\r\n                                <label htmlFor=\"confirmPassword\" className=\"sr-only\">تأكيد كلمة المرور</label>\r\n                                <input\r\n                                    id=\"confirmPassword\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    required\r\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 bg-gray-700 text-white placeholder-gray-400 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                                    placeholder=\"تأكيد كلمة المرور\"\r\n                                    value={formData.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={loading}\r\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n                        >\r\n                            {loading ? (\r\n                                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                                    <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                                    </svg>\r\n                                </span>\r\n                            ) : null}\r\n                            {loading ? (isRegister ? 'جاري إنشاء الحساب...' : 'جاري تسجيل الدخول...') : (isRegister ? 'إنشاء حساب' : 'تسجيل الدخول')}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"text-center text-sm text-gray-400 mt-4\">\r\n                    {isRegister ? (\r\n                        <> لديك حساب بالفعل؟ <button onClick={toggleRegister} className=\"font-medium text-blue-400 hover:text-blue-300 focus:outline-none\">تسجيل الدخول</button></>\r\n                    ) : (\r\n                        <>ليس لديك حساب؟ <button onClick={toggleRegister} className=\"font-medium text-blue-400 hover:text-blue-300 focus:outline-none\">سجل الآن!</button></>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["navigate","useNavigate","useState","isRegister","setIsRegister","username","firstName","lastName","email","password","confirmPassword","formData","setFormData","error","setError","loading","setLoading","useEffect","console","log","handleChange","e","target","name","value","handleSubmit","preventDefault","registrationData","register","response","token","localStorage","setItem","user","role","loginData","login","errorMessage","data","message","status","toggleRegister","className","dir","onSubmit","htmlFor","id","type","required","placeholder","onChange","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","onClick","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}